{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-06-17T16:36:11.145Z",
    "end": "2023-06-17T16:36:28.373Z",
    "duration": 17228
  },
  "results": [
    {
      "uuid": "6162d575-237f-459b-b400-7ecc941091dd",
      "title": "",
      "fullFile": "cypress/e2e/simple-donut.cy.js",
      "file": "cypress/e2e/simple-donut.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc8b0ddc-df23-4e97-a8dd-a78f9e2dfe68",
          "title": "simple-donut",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Getting simple donut chart and verify if is visible",
              "fullTitle": "simple-donut Getting simple donut chart and verify if is visible",
              "timedOut": null,
              "duration": 2108,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/simple-donut.cy.js.mp4\"",
              "code": "cy.get(\"#chart\").should(\"be.visible\");\ncy.get('[seriesname=\"series-1\"]').should(\"be.visible\");\ncy.get('[seriesname=\"series-2\"]').should(\"be.visible\");\ncy.get('[seriesname=\"series-3\"]').should(\"be.visible\");\ncy.get('[seriesname=\"series-4\"]').should(\"be.visible\");\ncy.get('[seriesname=\"series-5\"]').should(\"be.visible\");",
              "err": {},
              "uuid": "f68b7d76-d702-4b41-9e30-30733da04a97",
              "parentUUID": "dc8b0ddc-df23-4e97-a8dd-a78f9e2dfe68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click in a specific series name and see if the information on chat is highleted",
              "fullTitle": "simple-donut Click in a specific series name and see if the information on chat is highleted",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/simple-donut.cy.js.mp4\"",
              "code": "cy.get('[seriesname=\"series-1\"]').first().click();\ncy.get('[seriesName=\"series-1\"]').eq(1).children().should(\"have.attr\", \"data:pieClicked\", \"true\");",
              "err": {},
              "uuid": "ab6bb0cf-acea-49eb-bd74-7f6bcc977ea4",
              "parentUUID": "dc8b0ddc-df23-4e97-a8dd-a78f9e2dfe68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assert that the total values in an element is being shown",
              "fullTitle": "simple-donut Assert that the total values in an element is being shown",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/simple-donut.cy.js.mp4\"",
              "code": "cy.get('[seriesName=\"series-1\"]').eq(1).children().should(\"have.attr\", \"data:value\", 44);\ncy.get('[seriesName=\"series-1\"]').eq(1).children().invoke(\"attr\", \"data:value\").then(value => {\n  expect(Number(value)).to.be.gte(0);\n});",
              "err": {},
              "uuid": "f2b135cb-5dd2-4801-8121-ee9b7ccc483c",
              "parentUUID": "dc8b0ddc-df23-4e97-a8dd-a78f9e2dfe68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check if a series with 0 values would be display in the chart with percentage 0%",
              "fullTitle": "simple-donut Check if a series with 0 values would be display in the chart with percentage 0%",
              "timedOut": null,
              "duration": 348,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/simple-donut.cy.js.mp4\"",
              "code": "cy.intercept(\"https://apexcharts.com/samples/react/pie/simple-donut.html\", {\n  fixture: \"simple-donut.html\"\n}).as(\"simple-donut\");\ncy.visit(\"/samples/react/pie/simple-donut.html\");\ncy.wait(\"@simple-donut\");\ncy.get(\"#chart\").should(\"be.visible\");\ncy.get('[seriesname=\"series-1\"]').should(\"be.visible\");\ncy.get('[seriesName=\"series-1\"]').eq(1).children().should(\"have.attr\", \"data:value\", 0);",
              "err": {},
              "uuid": "5e14698b-24bc-482e-9a92-5ac4c9551b93",
              "parentUUID": "dc8b0ddc-df23-4e97-a8dd-a78f9e2dfe68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Checking if sum all the series on the char is we are getting 100%",
              "fullTitle": "simple-donut Checking if sum all the series on the char is we are getting 100%",
              "timedOut": null,
              "duration": 286,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/simple-donut.cy.js.mp4\"",
              "code": "cy.get(\"#SvgjsText1018\").invoke(\"text\").then(series1 => {\n  cy.get(\"#SvgjsG1030\").invoke(\"text\").then(series2 => {\n    cy.get(\"#SvgjsG1043\").invoke(\"text\").then(series3 => {\n      cy.get(\"#SvgjsG1056\").invoke(\"text\").then(series4 => {\n        cy.get(\"#SvgjsG1069\").invoke(\"text\").then(series5 => {\n          const sumSeriesPercentage = Number(series1.replace(\"%\", \"\")) + Number(series2.replace(\"%\", \"\")) + Number(series3.replace(\"%\", \"\")) + Number(series4.replace(\"%\", \"\")) + Number(series5.replace(\"%\", \"\"));\n          expect(Math.floor(sumSeriesPercentage)).to.be.equals(100);\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "1b7ee82b-13bc-49ab-8ee6-578e890cbd66",
              "parentUUID": "dc8b0ddc-df23-4e97-a8dd-a78f9e2dfe68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check if the values on my series represet the real percetage shown on the chart",
              "fullTitle": "simple-donut Check if the values on my series represet the real percetage shown on the chart",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/simple-donut.cy.js.mp4\"",
              "code": "let totalSeriesValues = 0;\nlet seriesValues = undefined;\ncy.get('[type=\"donut\"]').invoke(\"attr\", \"series\").then(series => {\n  seriesValues = series.split(\",\");\n  totalSeriesValues = Number(seriesValues[0]) + Number(seriesValues[1]) + Number(seriesValues[2]) + Number(seriesValues[3]) + Number(seriesValues[4]);\n});\ncy.get(\"#SvgjsText1018\").invoke(\"text\").then(series1Percentage => {\n  cy.get(\"#SvgjsG1030\").invoke(\"text\").then(series2Percentage => {\n    cy.get(\"#SvgjsG1043\").invoke(\"text\").then(series3Percentage => {\n      cy.get(\"#SvgjsG1056\").invoke(\"text\").then(series4Percentage => {\n        cy.get(\"#SvgjsG1069\").invoke(\"text\").then(series5Percentage => {\n          const sumSeriesPercentage = Number(series1Percentage.replace(\"%\", \"\")) + Number(series2Percentage.replace(\"%\", \"\")) + Number(series3Percentage.replace(\"%\", \"\")) + Number(series4Percentage.replace(\"%\", \"\")) + Number(series5Percentage.replace(\"%\", \"\"));\n          expect(Math.floor(sumSeriesPercentage)).to.be.equals(100);\n          const seriesPercentage1Calculated = (0, _utils.calculatePercentage)(totalSeriesValues, seriesValues[0]);\n          const seriesPercentage2Calculated = (0, _utils.calculatePercentage)(totalSeriesValues, seriesValues[1]);\n          const seriesPercentage3Calculated = (0, _utils.calculatePercentage)(totalSeriesValues, seriesValues[2]);\n          const seriesPercentage4Calculated = (0, _utils.calculatePercentage)(totalSeriesValues, seriesValues[3]);\n          const seriesPercentage5Calculated = (0, _utils.calculatePercentage)(totalSeriesValues, seriesValues[4]);\n          expect(Number(series1Percentage.replace(\"%\", \"\"))).to.be.equals(seriesPercentage1Calculated);\n          expect(Number(series2Percentage.replace(\"%\", \"\"))).to.be.equals(seriesPercentage2Calculated);\n          expect(Number(series3Percentage.replace(\"%\", \"\"))).to.be.equals(seriesPercentage3Calculated);\n          expect(Number(series4Percentage.replace(\"%\", \"\"))).to.be.equals(seriesPercentage4Calculated);\n          expect(Number(series5Percentage.replace(\"%\", \"\"))).to.be.equals(seriesPercentage5Calculated);\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "6112d29e-71cd-464a-a316-95f64ca06de9",
              "parentUUID": "dc8b0ddc-df23-4e97-a8dd-a78f9e2dfe68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Hover in a series in chart should show the total number of values in the serie",
              "fullTitle": "simple-donut Hover in a series in chart should show the total number of values in the serie",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/simple-donut.cy.js.mp4\"",
              "code": "",
              "err": {},
              "uuid": "c927c4b1-b819-417c-82ab-5a7205108e84",
              "parentUUID": "dc8b0ddc-df23-4e97-a8dd-a78f9e2dfe68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercept the endpoint requests sending the series data and check if the information on the chart is the same one from our endpoint response",
              "fullTitle": "simple-donut Intercept the endpoint requests sending the series data and check if the information on the chart is the same one from our endpoint response",
              "timedOut": null,
              "duration": 244,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/simple-donut.cy.js.mp4\"",
              "code": "",
              "err": {},
              "uuid": "a0fb86b3-cf47-4baf-89a8-71a3b233c151",
              "parentUUID": "dc8b0ddc-df23-4e97-a8dd-a78f9e2dfe68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check if my series on chart have different colors",
              "fullTitle": "simple-donut Check if my series on chart have different colors",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/simple-donut.cy.js.mp4\"",
              "code": "",
              "err": {},
              "uuid": "4fbb3ab6-6fa6-47b4-9589-aedabe4795c7",
              "parentUUID": "dc8b0ddc-df23-4e97-a8dd-a78f9e2dfe68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Run cypress-axe to check if our chart have a great accessibility score for people with vision problems, like aria-labels and good contrast color",
              "fullTitle": "simple-donut Run cypress-axe to check if our chart have a great accessibility score for people with vision problems, like aria-labels and good contrast color",
              "timedOut": null,
              "duration": 240,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/simple-donut.cy.js.mp4\"",
              "code": "",
              "err": {},
              "uuid": "046f77c8-5472-4fb0-81e4-3c6f1faad4bc",
              "parentUUID": "dc8b0ddc-df23-4e97-a8dd-a78f9e2dfe68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Run cypress-axe to check if our chart have a great accessibility score for people with vision problems, like aria-labels and good contrast color",
              "fullTitle": "simple-donut Run cypress-axe to check if our chart have a great accessibility score for people with vision problems, like aria-labels and good contrast color",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/simple-donut.cy.js.mp4\"",
              "code": "",
              "err": {},
              "uuid": "0b8bc6c3-263b-4c0a-9c57-6f3fdc8cfb5b",
              "parentUUID": "dc8b0ddc-df23-4e97-a8dd-a78f9e2dfe68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The color in the series name on summary should be the same color on the chart",
              "fullTitle": "simple-donut The color in the series name on summary should be the same color on the chart",
              "timedOut": null,
              "duration": 244,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/simple-donut.cy.js.mp4\"",
              "code": "",
              "err": {},
              "uuid": "6b572ba9-89a7-4a69-8605-80fc498645de",
              "parentUUID": "dc8b0ddc-df23-4e97-a8dd-a78f9e2dfe68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f68b7d76-d702-4b41-9e30-30733da04a97",
            "ab6bb0cf-acea-49eb-bd74-7f6bcc977ea4",
            "f2b135cb-5dd2-4801-8121-ee9b7ccc483c",
            "5e14698b-24bc-482e-9a92-5ac4c9551b93",
            "1b7ee82b-13bc-49ab-8ee6-578e890cbd66",
            "6112d29e-71cd-464a-a316-95f64ca06de9",
            "c927c4b1-b819-417c-82ab-5a7205108e84",
            "a0fb86b3-cf47-4baf-89a8-71a3b233c151",
            "4fbb3ab6-6fa6-47b4-9589-aedabe4795c7",
            "046f77c8-5472-4fb0-81e4-3c6f1faad4bc",
            "0b8bc6c3-263b-4c0a-9c57-6f3fdc8cfb5b",
            "6b572ba9-89a7-4a69-8605-80fc498645de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5103,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}